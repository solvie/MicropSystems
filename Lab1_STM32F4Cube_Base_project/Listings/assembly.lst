


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text,CODE,READONLY
    2 00000000                 EXPORT           IIR_asm
    3 00000000         IIR_asm
    4 00000000         ;input array R0
    5 00000000         ;output array R1
    6 00000000         ;length of array R2
    7 00000000         ;coeff R3
    8 00000000 F103 060C       ADD              R6,R3,#12   ; R6 starting point
                                                             of coefficient b
    9 00000004 F04F 0700       MOV              R7,#0       ; counter i in byte
                                                            s
   10 00000008         
   11 00000008         loop
   12 00000008 2A00            CMP              R2,#0
   13 0000000A D034            BEQ              exit
   14 0000000C EDD6 1A00       VLDR.f32         S3,[R6]     ; (coeff->b)[0]
   15 00000010         ;temp R8
   16 00000010 EB00 0807       ADD              R8,R0,R7
   17 00000014 ED98 2A00       VLDR.f32         S4,[R8]     ; load i th element
                                                             of input array
   18 00000018 EE61 1A82       VMUL.f32         S3,S3,S4    ; temp result=(coef
                                                            f->b)[0]*InputArray
                                                            [i]
   19 0000001C F04F 0904       MOV              R9,#4
   20 00000020         
   21 00000020         inner_loop
   22 00000020 F1B9 0F0C       CMP              R9,#12      ; (Order+1)*4 bytes
                                                            
   23 00000024 D01E            BEQ              end_inner_loop
   24 00000026 45B9            CMP              R9,R7
   25 00000028 DC1C            BGT              end_inner_loop
   26 0000002A EBA7 0A09       SUB              R10,R7,R9
   27 0000002E         
   28 0000002E EB06 0809       ADD              R8,R6,R9
   29 00000032 ED98 2A00       VLDR.f32         S4,[R8]     ; load b[j] into S4
                                                            
   30 00000036 EB00 080A       ADD              R8,R0,R10
   31 0000003A EDD8 2A00       VLDR.f32         S5,[R8]     ; load InputArray[i
                                                            -j] into S5
   32 0000003E EE22 2A22       VMUL.f32         S4,S4,S5    ; (coeff->b)[j]*Inp
                                                            utArray[i-j]
   33 00000042 EE71 1A82       VADD.f32         S3,S3,S4    ; tempResult= tempR
                                                            esult + (coeff->b)[
                                                            j]*InputArray[i-j]
   34 00000046         
   35 00000046 EB03 0809       ADD              R8,R3,R9
   36 0000004A ED98 2A00       VLDR.f32         S4,[R8]     ; load a[j] into S4
                                                            
   37 0000004E EB01 080A       ADD              R8,R1,R10
   38 00000052 EDD8 2A00       VLDR.f32         S5,[R8]     ; load OutputArray[
                                                            i-j] into S5
   39 00000056 EE22 2A22       VMUL.f32         S4,S4,S5    ; (coeff->a)[j]*Out
                                                            PutArray[i-j]
   40 0000005A EE71 1A82       VADD.f32         S3,S3,S4    ; tempResult= tempR
                                                            esult + (coeff->a)[
                                                            j]*OutPut[i-j]
   41 0000005E         
   42 0000005E F109 0904       ADD              R9,R9,#4
   43 00000062 E7DD            B                inner_loop



ARM Macro Assembler    Page 2 


   44 00000064         
   45 00000064         end_inner_loop
   46 00000064 EB01 0807       ADD              R8,R1,R7
   47 00000068 EDC8 1A00       VSTR             S3,[R8]
   48 0000006C F107 0704       ADD              R7,R7,#4
   49 00000070 F1A2 0201       SUB              R2,R2,#1
   50 00000074 E7C8            B                loop
   51 00000076         
   52 00000076         exit
   53 00000076 4770            BX               LR          ;
   54 00000078                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\assembly.d -o.\objects\assembly.o -IP:\uP\Lab1_STM32F
4Cube_Base_project\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:
\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\I
nclude --predefine="__UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --pr
edefine="STM32F407xx SETA 1" --list=.\listings\assembly.lst Sources\Assembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

IIR_asm 00000000

Symbol: IIR_asm
   Definitions
      At line 3 in file Sources\Assembly.s
   Uses
      At line 2 in file Sources\Assembly.s
Comment: IIR_asm used once
end_inner_loop 00000064

Symbol: end_inner_loop
   Definitions
      At line 45 in file Sources\Assembly.s
   Uses
      At line 23 in file Sources\Assembly.s
      At line 25 in file Sources\Assembly.s

exit 00000076

Symbol: exit
   Definitions
      At line 52 in file Sources\Assembly.s
   Uses
      At line 13 in file Sources\Assembly.s
Comment: exit used once
inner_loop 00000020

Symbol: inner_loop
   Definitions
      At line 21 in file Sources\Assembly.s
   Uses
      At line 43 in file Sources\Assembly.s
Comment: inner_loop used once
loop 00000008

Symbol: loop
   Definitions
      At line 11 in file Sources\Assembly.s
   Uses
      At line 50 in file Sources\Assembly.s
Comment: loop used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file Sources\Assembly.s
   Uses
      None
Comment: text unused
6 symbols
340 symbols in table
